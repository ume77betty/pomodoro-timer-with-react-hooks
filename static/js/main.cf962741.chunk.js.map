{"version":3,"sources":["components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","useState","secondsLeft","setSecondsLeft","timerRunning","setTimerRunning","tempTime","setTempTime","useEffect","countDown","setInterval","displayTime","clearInterval","minutes","Math","floor","remainSeconds","className","onClick","prevSeconds","prevTempTime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NA8HeA,EA5HD,WAAO,IAAD,EACoBC,mBAAS,MAD7B,mBACXC,EADW,KACEC,EADF,OAEsBF,oBAAS,GAF/B,mBAEXG,EAFW,KAEGC,EAFH,OAGcJ,mBAAS,MAHvB,mBAGXK,EAHW,KAGDC,EAHC,KAKlBC,qBAAU,WACR,IAAIC,EAAY,KAShB,OARIL,GAAgBF,EAAc,EAChCO,EAAYC,aAAY,WACtBC,EAAYT,GACZC,EAAeD,EAAc,KAC5B,KACME,GAAgC,IAAhBF,GACzBU,cAAcH,GAET,kBAAMG,cAAcH,MAC1B,CAACL,EAAcF,IAGlB,IA4DMS,EAAc,SAACT,GACnB,IAAIW,EAAUC,KAAKC,MAAMb,EAAc,IACnCc,EAAgBd,EAAc,GAQlC,OAPIW,EAAU,KACZA,EAAU,IAAMA,GAEdG,EAAgB,KAClBA,EAAgB,IAAMA,GAERH,EAAU,MAAQG,GAIpC,OACE,sBAAKC,UAAU,QAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAMA,UAAU,aAAhB,SAA8BN,EAAYT,KAC1C,sBAAKe,UAAU,cAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,wBAAQA,UAAU,sBAAsBC,QA/E/B,WACbhB,GAAe,IACjBC,GAAe,SAACgB,GAAD,OAAiBA,EAAc,MAC9CZ,GAAY,SAACa,GAAD,OAAkBA,EAAe,UA6EvC,wBAAQH,UAAU,wBAAwBC,QAxE/B,WACfhB,GAAe,KACjBC,GAAe,SAACgB,GAAD,OAAiBA,EAAc,MAC9CZ,GAAY,SAACa,GAAD,OAAkBA,EAAe,aAuEzC,sBAAKH,UAAU,iBAAf,UACE,wBAAQA,UAAU,sBAAsBC,QAnE/B,WACbhB,GAAe,IACjBC,GAAe,SAACgB,GAAD,OAAiBA,EAAc,MAC9CZ,GAAY,SAACa,GAAD,OAAkBA,EAAe,UAiEvC,wBAAQH,UAAU,wBAAwBC,QA5D/B,WACfhB,GAAe,KACjBC,GAAe,SAACgB,GAAD,OAAiBA,EAAc,MAC9CZ,GAAY,SAACa,GAAD,OAAkBA,EAAe,mBA6D7C,sBAAKH,UAAU,YAAf,UACE,wBAAQA,UAAU,4BAA4BC,QA7CjC,WACjBb,GAAgB,MA6CZ,wBAAQY,UAAU,4BAA4BC,QAzCjC,WACjBb,GAAgB,MAyCZ,wBAAQY,UAAU,4BAA4BC,QArCjC,WACjBb,GAAgB,GAChBF,EAAeG,SAqCb,sBAAKW,UAAU,YAAYC,QA7Dd,WACff,EAAe,MACfI,EAAY,OA2DV,UACE,wBAAQU,UAAU,mBAClB,2DAEF,sBAAKA,UAAU,aAAaC,QA3Dd,WAChBf,EAAe,KACfI,EAAY,MAyDV,UACE,wBAAQU,UAAU,wBAClB,gEC3GOI,MARf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,OCISK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cf962741.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Timer = () => {\r\n  const [secondsLeft, setSecondsLeft] = useState(20 * 60);\r\n  const [timerRunning, setTimerRunning] = useState(false);\r\n  const [tempTime, setTempTime] = useState(20 * 60);\r\n\r\n  useEffect(() => {\r\n    let countDown = null;\r\n    if (timerRunning && secondsLeft > 0) {\r\n      countDown = setInterval(() => {\r\n        displayTime(secondsLeft);\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }, 1000);\r\n    } else if (timerRunning && secondsLeft === 0) {\r\n      clearInterval(countDown);\r\n    }\r\n    return () => clearInterval(countDown);\r\n  }, [timerRunning, secondsLeft]);\r\n\r\n  //增加一分鐘\r\n  const addMinutes = () => {\r\n    if (secondsLeft >= 0) {\r\n      setSecondsLeft((prevSeconds) => prevSeconds + 60);\r\n      setTempTime((prevTempTime) => prevTempTime + 60);\r\n    }\r\n  };\r\n\r\n  //減少一分鐘\r\n  const minusMinutes = () => {\r\n    if (secondsLeft >= 60) {\r\n      setSecondsLeft((prevSeconds) => prevSeconds - 60);\r\n      setTempTime((prevTempTime) => prevTempTime - 60);\r\n    }\r\n  };\r\n\r\n  //增加十秒鐘\r\n  const addSeconds = () => {\r\n    if (secondsLeft >= 0) {\r\n      setSecondsLeft((prevSeconds) => prevSeconds + 10);\r\n      setTempTime((prevTempTime) => prevTempTime + 10);\r\n    }\r\n  };\r\n\r\n  //減少十秒鐘\r\n  const minusSeconds = () => {\r\n    if (secondsLeft >= 10) {\r\n      setSecondsLeft((prevSeconds) => prevSeconds - 10);\r\n      setTempTime((prevTempTime) => prevTempTime - 10);\r\n    }\r\n  };\r\n\r\n  //設定為工作模式\r\n  const workTime = () => {\r\n    setSecondsLeft(25 * 60);\r\n    setTempTime(25 * 60);\r\n  };\r\n\r\n  //設定為休息模式\r\n  const breakTime = () => {\r\n    setSecondsLeft(5 * 60);\r\n    setTempTime(5 * 60);\r\n  };\r\n\r\n  //計時器開始\r\n  const startTimer = () => {\r\n    setTimerRunning(true);\r\n  };\r\n\r\n  //計時器暫停\r\n  const pauseTimer = () => {\r\n    setTimerRunning(false);\r\n  };\r\n\r\n  //計時器reset\r\n  const resetTimer = () => {\r\n    setTimerRunning(false);\r\n    setSecondsLeft(tempTime);\r\n  };\r\n\r\n  //將計時器時間顯示為分秒\r\n  const displayTime = (secondsLeft) => {\r\n    let minutes = Math.floor(secondsLeft / 60);\r\n    let remainSeconds = secondsLeft % 60;\r\n    if (minutes < 10) {\r\n      minutes = '0' + minutes;\r\n    }\r\n    if (remainSeconds < 10) {\r\n      remainSeconds = '0' + remainSeconds;\r\n    }\r\n    const display = minutes + ' : ' + remainSeconds;\r\n    return display;\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div className=\"main-part\">\r\n        <span className=\"main-timer\">{displayTime(secondsLeft)}</span>\r\n        <div className=\"adjust-part\">\r\n          <div className=\"adjust-minutes\">\r\n            <button className=\"icon add-timer-icon\" onClick={addMinutes}></button>\r\n            <button className=\"icon minus-timer-icon\" onClick={minusMinutes}></button>\r\n          </div>\r\n          <div className=\"adjust-seconds\">\r\n            <button className=\"icon add-timer-icon\" onClick={addSeconds}></button>\r\n            <button className=\"icon minus-timer-icon\" onClick={minusSeconds}></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"timer-bar\">\r\n        <button className=\"bar-icon timer-start-icon\" onClick={startTimer}></button>\r\n        <button className=\"bar-icon timer-pause-icon\" onClick={pauseTimer}></button>\r\n        <button className=\"bar-icon timer-reset-icon\" onClick={resetTimer}></button>\r\n      </div>\r\n      <div className=\"work-time\" onClick={workTime}>\r\n        <button className=\"icon work-icon\" ></button>\r\n        <span>Let's Work! (25mins)</span>\r\n      </div>\r\n      <div className=\"break-time\" onClick={breakTime}>\r\n        <button className=\"icon breaktime-icon\" ></button>\r\n        <span>Take a break. (5mins)</span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Timer;","import './App.css';\nimport Timer from './components/Timer';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}